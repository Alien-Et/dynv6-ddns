name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 仅在打 tag 时触发

env:
  TAR: tar  # 🛠️ 强制使用系统 tar，避免 gtar 问题

jobs:
  build:
    name: Build ${{ matrix.os }} / ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-24.04, macos-14, windows-latest]
        arch: [amd64, arm64]

    steps:
      - name: 📥 拉取源码
        uses: actions/checkout@v4

      - name: ⚙️ 安装 Go 环境
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: 🧹 缓存 Go 依赖
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
          overwrite: true  # ✅ 防止文件冲突

      - name: 🛠️ 设置构建参数
        run: |
          echo "GOARCH=${{ matrix.arch }}" >> $GITHUB_ENV
          echo "GOOS=$(echo '${{ matrix.os }}' | sed 's/-.*//')" >> $GITHUB_ENV

      - name: 📦 构建可执行文件
        run: |
          mkdir -p dist
          go build -v -o dist/dynv6-ddns-${{ env.GOOS }}-${{ env.GOARCH }}

      - name: 📤 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: dynv6-ddns-${{ env.GOOS }}-${{ env.GOARCH }}
          path: dist/dynv6-ddns-${{ env.GOOS }}-${{ env.GOARCH }}

  release:
    name: 🚀 发布 Release
    runs-on: ubuntu-24.04
    needs: build

    steps:
      - name: 📥 下载所有构建产物
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: 🧾 列出产物内容
        run: ls -lR artifacts

      - name: 🗜️ 压缩为 zip 文件
        run: |
          cd artifacts
          for dir in *; do
            zip -j "../$dir.zip" "$dir"/*
          done
          cd ..

      - name: 🚀 发布到 GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          files: "*.zip"
