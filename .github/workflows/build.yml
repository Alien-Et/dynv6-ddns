name: Build All Platforms

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  BINARY_NAME: dynv6-ddns

jobs:
  build-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-latest, macos-latest]
        arch: [amd64, arm64]
        include:
          - os: ubuntu-24.04
            arch: armv7
          - os: ubuntu-24.04
            arch: arm64
          - os: ubuntu-24.04
            arch: amd64
          - os: windows-latest
            arch: amd64
          - os: macos-latest
            arch: amd64

    name: Build ${{ matrix.os }}-${{ matrix.arch }}
    steps:
      - name: 检出仓库代码
        uses: actions/checkout@v4

      - name: 设置 Go 环境
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: 设置目标架构环境变量
        run: |
          case "${{ matrix.arch }}" in
            amd64)
              echo "GOARCH=amd64" >> $GITHUB_ENV
              ;;
            arm64)
              echo "GOARCH=arm64" >> $GITHUB_ENV
              ;;
            armv7)
              echo "GOARCH=arm" >> $GITHUB_ENV
              echo "GOARM=7" >> $GITHUB_ENV
              ;;
          esac
          echo "GOOS=$(uname | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: 编译二进制
        run: |
          mkdir -p build
          go build -v -o build/${{ env.BINARY_NAME }}-${{ matrix.os }}-${{ matrix.arch }} .

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}-${{ matrix.os }}-${{ matrix.arch }}
          path: build/${{ env.BINARY_NAME }}-${{ matrix.os }}-${{ matrix.arch }}

  android:
    name: Build for Android (Termux)
    runs-on: ubuntu-24.04
    steps:
      - name: 检出仓库代码
        uses: actions/checkout@v4

      - name: 安装依赖项
        run: |
          sudo apt update && sudo apt install -y wget unzip
          wget https://dl.google.com/android/repository/android-ndk-r27d-linux.zip -O ndk.zip
          unzip ndk.zip -d $HOME
          echo "ANDROID_NDK_HOME=$HOME/android-ndk-r27d" >> $GITHUB_ENV

      - name: 设置交叉编译环境 (Android)
        run: |
          export NDK=$ANDROID_NDK_HOME
          export PATH=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          export CC=aarch64-linux-android21-clang
          export GOOS=android
          export GOARCH=arm64
          export CGO_ENABLED=1
          mkdir -p build
          CC=$CC go build -v -o build/${{ env.BINARY_NAME }}-android-arm64 .

      - name: 上传 Android 构建产物
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}-android-arm64
          path: build/${{ env.BINARY_NAME }}-android-arm64
