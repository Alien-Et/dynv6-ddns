name: Build and Release Dynv6 DDNS

# 权限设置
permissions:
  contents: write # 允许写入仓库内容（包括 Release）
  releases: write # 允许创建和修改 Release

# 触发工作流的事件
on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*' # 触发 Release 的标签格式，例如 v1.0.0
  pull_request:
    branches:
      - main

# 环境变量
env:
  GO_VERSION: '1.21'
  BINARY_NAME: dynv6-ddns

jobs:
  build:
    name: Build for ${{ matrix.goos }}-${{ matrix.goarch }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        goarch: [amd64, arm64]
        include:
          - os: ubuntu-latest
            goarch: arm64
            goos: android
            suffix: android-arm64
          - os: ubuntu-latest
            goarch: amd64
            goos: linux
            suffix: linux-amd64
          - os: ubuntu-latest
            goarch: arm64
            goos: linux
            suffix: linux-arm64
          - os: windows-latest
            goarch: amd64
            goos: windows
            suffix: windows-amd64
            ext: .exe
          - os: windows-latest
            goarch: arm64
            goos: windows
            suffix: windows-arm64
            ext: .exe
          - os: macos-latest
            goarch: amd64
            goos: darwin
            suffix: darwin-amd64
          - os: macos-latest
            goarch: arm64
            goos: darwin
            suffix: darwin-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.mod', '**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          go build -o ${{ env.BINARY_NAME }}-${{ matrix.suffix }}${{ matrix.ext }} main.go
          chmod +x ${{ env.BINARY_NAME }}-${{ matrix.suffix }}${{ matrix.ext }} || true

      - name: Compress binary
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update && sudo apt-get install -y upx
          upx --best ${{ env.BINARY_NAME }}-${{ matrix.suffix }}${{ matrix.ext }} || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}-${{ matrix.suffix }}
          path: ${{ env.BINARY_NAME }}-${{ matrix.suffix }}${{ matrix.ext }}
          retention-days: 1

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    # 仅在推送标签时运行
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/*/*
          draft: false
          prerelease: false
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}