name: CI and Release

on:
  push:
    branches: [main]
    tags: ["v*.*.*"]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build (${{ matrix.goos }}, ${{ matrix.goarch }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        goos: [linux, windows, darwin]
        goarch:
          - amd64
          - 386
          - arm
          - arm64
          - loong64
          - mips
          - mipsle
          - mips64
          - mips64le
          - riscv64
        exclude:
          - os: windows-latest
            goos: linux
            goarch: loong64
          - os: windows-latest
            goos: darwin
            goarch: loong64
          - os: windows-latest
            goos: linux
            goarch: riscv64
          - os: windows-latest
            goos: darwin
            goarch: riscv64
          - os: macos-latest
            goos: linux
            goarch: loong64
          - os: macos-latest
            goos: windows
            goarch: loong64
          - os: macos-latest
            goos: linux
            goarch: riscv64
          - os: macos-latest
            goos: windows
            goarch: riscv64
          - os: ubuntu-latest
            goos: windows
            goarch: loong64
          - os: ubuntu-latest
            goos: windows
            goarch: riscv64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install toolchain for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
            gcc-mips-linux-gnu g++-mips-linux-gnu \
            gcc-mipsel-linux-gnu g++-mipsel-linux-gnu \
            gcc-mips64-linux-gnuabi64 g++-mips64-linux-gnuabi64 \
            gcc-mips64el-linux-gnuabi64 g++-mips64el-linux-gnuabi64 \
            gcc-riscv64-linux-gnu g++-riscv64-linux-gnu || true

      - name: Clean Go cache directories before restore cache
        run: |
          rm -rf ~/.cache/go-build-${{ matrix.goos }}-${{ matrix.goarch }} ~/go/pkg/mod || true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build-${{ matrix.goos }}-${{ matrix.goarch }}
            ~/go/pkg/mod
          key: ${{ runner.os }}-${{ matrix.goos }}-${{ matrix.goarch }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.goos }}-${{ matrix.goarch }}-

      - name: Build
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -ldflags="-s -w" -o dynv6-ddns-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/dynv6-ddns

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dynv6-ddns-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dynv6-ddns-${{ matrix.goos }}-${{ matrix.goarch }}

  build-android:
    name: Build Android (${{ matrix.goarch }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goarch: [arm, arm64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Clean Go cache directories before restore cache (Android)
        run: |
          rm -rf ~/.cache/go-build-android-${{ matrix.goarch }} ~/go/pkg/mod || true

      - name: Cache Go modules for Android
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build-android-${{ matrix.goarch }}
            ~/go/pkg/mod
          key: ${{ runner.os }}-android-${{ matrix.goarch }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-android-${{ matrix.goarch }}-

      - name: Set up Android NDK
        uses: actions/setup-android@v2
        with:
          ndk-version: 'r27'

      - name: Build Android binary
        env:
          CGO_ENABLED: 1
          GOOS: android
          GOARCH: ${{ matrix.goarch }}
          CC: ${{ matrix.goarch }}-linux-android21-clang
        run: |
          go build -ldflags="-s -w" -o dynv6-ddns-android-${{ matrix.goarch }} ./cmd/dynv6-ddns

      - name: Upload Android build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dynv6-ddns-android-${{ matrix.goarch }}
          path: dynv6-ddns-android-${{ matrix.goarch }}
